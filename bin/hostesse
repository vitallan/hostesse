#!/usr/bin/env ruby

require 'hostesse'
require 'hostesse/cli'
require 'readline'

cli      = Hostesse::Cli.new(ARGV[0] || Hostesse::Environment.default_target_file, '.')
messages = Hostesse::Cli::Messages.new(cli)

puts messages.welcome

# handle ctrl+c gracefully

trap('INT') { cli.at_exit }

Readline.completion_append_character = ''
Readline.completion_proc             = ->(s) {
  Dir[s + '*'].map { |inode|
    if File.directory? inode
      inode + '/'
    elsif inode =~ /#{ Regexp.quote(Hostesse::DEFAULT_HOSTS_FILE_SUFFIX) }$/
      inode[0..-Hostesse::DEFAULT_HOSTS_FILE_SUFFIX.size.succ]
    else
      nil
    end
  }.compact
}

while line = Readline.readline(messages.ps1, true)
  current_hosts = line.strip unless line.strip.empty?

  unless current_hosts.empty?
    begin
      File.open(cli.target_file, 'w') do |generated_hosts|
        parsed_hosts = Hostesse::SimpleTemplateEngine.new(cli.pwd).parse(current_hosts)
        generated_hosts.write(parsed_hosts)
        if parsed_hosts =~ /ERROR/
          puts messages.error_in_definition_file
        end
      end

    rescue Errno::EACCES
      puts messages.error_target_file_isnt_writable

    rescue => error
      puts messages.error_very_bad_error(error)

    end
  end
end

cli.at_exit
