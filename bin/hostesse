#!/usr/bin/env ruby

require 'hostesse'
require 'readline'
require 'rbconfig'

# thanks StackOverflow
# http://stackoverflow.com/questions/4871309/what-is-the-correct-way-to-detect-if-ruby-is-running-on-windows
is_windows = (RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/)

DEFAULT_TARGET_FILE = is_windows ? 'C:/windows/system32/drivers/etc/hosts' : '/etc/hosts'

current_hosts = ''
target_file   = File.expand_path(ARGV[0] || DEFAULT_TARGET_FILE)

puts <<-WELCOME

Welcome to hostesse (#{ Hostesse::VERSION})!

The current target file is #{ target_file }. Note that you need permission to write in this file!

To change hosts, type the name of the file, without the .hosts suffix.
Tab completion should help you in this.

To refresh the hosts, hit enter.

WELCOME

# handle ctrl+c gracefully

trap('INT') do
  puts "\n\nThanks for using hostesse!\n:)\n\n"
  exit
end

Readline.completion_append_character = ''
Readline.completion_proc             = ->(s) {
  Dir[s + '*'].map { |inode|
    if File.directory? inode
      inode + '/'
    elsif inode =~ /#{ Regexp.quote(Hostesse::DEFAULT_HOSTS_FILE_SUFFIX) }$/
      inode[0..-Hostesse::DEFAULT_HOSTS_FILE_SUFFIX.size.succ]
    else
      nil
    end
  }.compact
}

while line = Readline.readline('hostesse> ', true).strip
  current_hosts = line unless line.empty?

  unless current_hosts.empty?
    begin
      File.open(target_file, 'w') { |generated_hosts|
        parsed_hosts = Hostesse::SimpleTemplateEngine.new('.').parse(current_hosts)
        generated_hosts.write(parsed_hosts)
        if parsed_hosts =~ /ERROR/
          puts "There is a error in your hosts definition. See #{ target_file } for more details"
        end
      }

    rescue Errno::EACCES
      puts "#{ target_file } isn't writable, hosts not saved!"
      puts
      puts 'Solve this by running hostesse as root or changing'
      puts "the permissions for #{ target_file }"

    rescue => e
      puts 'Something went terribly wrong!'
      puts
      puts 'Please report this error with the following message:'
      puts
      puts e
      puts e.backtrace
    end
  end
end
